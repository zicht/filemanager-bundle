<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="zicht_filemanager.filemanager.class">Zicht\Bundle\FileManagerBundle\FileManager\FileManager</parameter>
        <parameter key="zicht_filemanager.root">%kernel.project_dir%/public/media</parameter>
        <parameter key="zicht_filemanager.http_root">media</parameter>
        <parameter key="zicht_filemanager.form.file_type.class">Zicht\Bundle\FileManagerBundle\Form\FileType</parameter>
        <parameter key="zicht_filemanager.integrity_checker.database.class">Zicht\Bundle\FileManagerBundle\Integrity\DatabaseChecker</parameter>
        <parameter key="zicht_filemanager.integrity_checker.filesystem.class">Zicht\Bundle\FileManagerBundle\Integrity\FilesystemChecker</parameter>
        <parameter key="zicht_filemanager.entity_helper.class">Zicht\Bundle\FileManagerBundle\Doctrine\EntityHelper</parameter>
        <parameter key="zicht_filemanager.naming_strategy.class">Zicht\Bundle\FileManagerBundle\Mapping\DefaultNamingStrategy</parameter>
        <parameter key="zicht_filemanager.naming_strategy.case_preservation">false</parameter>
    </parameters>
    <services>
        <service id="zicht_filemanager.naming_strategy" class="%zicht_filemanager.naming_strategy.class%">
            <argument>%zicht_filemanager.naming_strategy.case_preservation%</argument>
        </service>

        <service id="zicht_filemanager.subscribe" class="Zicht\Bundle\FileManagerBundle\Doctrine\FileManagerSubscriber">
            <argument type="service" id="zicht_filemanager.filemanager"/>
            <argument type="service" id="Zicht\Bundle\FileManagerBundle\Doctrine\MetadataRegistry"/>
            <tag name="doctrine.event_subscriber" connection="default"/>
        </service>
        <service id="zicht_filemanager.filemanager" class="%zicht_filemanager.filemanager.class%">
            <argument type="service" id="filesystem"/>
            <argument>%zicht_filemanager.root%</argument>
            <argument>%zicht_filemanager.http_root%</argument>
            <argument type="service" id="zicht_filemanager.naming_strategy"/>
        </service>
        <service id="Zicht\Bundle\FileManagerBundle\FileManager\FileManager" alias="zicht_filemanager.filemanager"/>
        <service id="zicht_filemanager.twig_extension" class="Zicht\Bundle\FileManagerBundle\Twig\FileManagerExtension">
            <argument type="service" id="zicht_filemanager.filemanager"/>
            <tag name="twig.extension"/>
        </service>
        <service id="Zicht\Bundle\FileManagerBundle\Metadata\Driver\AnnotationDriver">
            <argument type="service" id="annotation_reader"/>
        </service>
        <service id="Zicht\Bundle\FileManagerBundle\Metadata\Driver\AttributeDriver"/>
        <service id="Zicht\Bundle\FileManagerBundle\Doctrine\MetadataRegistry">
            <argument type="service" id="zicht_filemanager.metadata_factory"/>
        </service>
        <service id="zicht_filemanager.metadata.driver_chain" class="Metadata\Driver\DriverChain">
            <argument type="collection">
                <argument type="service" id="Zicht\Bundle\FileManagerBundle\Metadata\Driver\AnnotationDriver"/>
                <argument type="service" id="Zicht\Bundle\FileManagerBundle\Metadata\Driver\AttributeDriver"/>
            </argument>
        </service>
        <service id="zicht_filemanager.metadata_factory" class="Metadata\MetadataFactory">
            <argument type="service" id="zicht_filemanager.metadata.driver_chain"/>
        </service>
        <service id="zicht_filemanager.form.file_type" class="%zicht_filemanager.form.file_type.class%">
            <argument type="service" id="zicht_filemanager.filemanager"/>
            <argument type="service" id="translator.default"/>
            <tag name="form.type"/>
        </service>
        <service id="zicht_filemanager.integrity_checker.database" class="%zicht_filemanager.integrity_checker.database.class%">
            <argument type="service" id="zicht_filemanager.filemanager"/>
            <argument type="service" id="zicht_filemanager.metadata_factory"/>
            <argument type="service" id="doctrine"/>
        </service>
        <service id="zicht_filemanager.integrity_checker.filesystem" class="%zicht_filemanager.integrity_checker.filesystem.class%">
            <argument type="service" id="zicht_filemanager.filemanager"/>
            <argument type="service" id="zicht_filemanager.metadata_factory"/>
            <argument type="service" id="doctrine"/>
        </service>
        <service id="zicht_filemanager.entity_helper" class="%zicht_filemanager.entity_helper.class%">
            <argument type="service" id="zicht_filemanager.metadata_factory"/>
            <argument type="service" id="doctrine"/>
            <argument type="service" id="kernel"/>
        </service>

        <service id="Zicht\Bundle\FileManagerBundle\Controller\ImagineController">
            <tag name="controller.service_arguments"/>
            <tag name="container.service_subscriber"/>
            <call method="setContainer">
                <argument type="service" id="Psr\Container\ContainerInterface"/>
            </call>
        </service>

        <service id="Zicht\Bundle\FileManagerBundle\Command\CreateMimeFileCommand">
            <tag name="console.command"/>
        </service>

        <service id="Zicht\Bundle\FileManagerBundle\Command\FileCheckCommand">
            <tag name="console.command"/>
            <argument type="service" id="zicht_filemanager.integrity_checker.database"/>
            <argument type="service" id="zicht_filemanager.integrity_checker.filesystem"/>
            <argument type="service" id="zicht_filemanager.entity_helper"/>
        </service>
    </services>
</container>
